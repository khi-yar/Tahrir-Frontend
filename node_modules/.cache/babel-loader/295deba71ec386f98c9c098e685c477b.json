{"ast":null,"code":"import _slicedToArray from \"/home/smp/workspace/projects/TahrirProject/Tahrir-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/smp/workspace/projects/TahrirProject/Tahrir-Frontend/src/components/Result/index.js\";\nimport React, { useState } from \"react\";\nimport useAxios from \"axios-hooks\";\nimport { SelectedResult, Loading } from \"../index\";\nimport { Row, Col } from \"react-bootstrap\";\nexport default (function (props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedResult = _useState2[0],\n      setSelectedResult = _useState2[1];\n\n  var _useAxios = useAxios({\n    url: \"/translation/get?word=\".concat(props.word, \"&lang=\").concat(props.lang),\n    method: \"get\"\n  }),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetchFromPersian = _useAxios2[1];\n\n  if (true) return React.createElement(Loading, {\n    desc: \"شکیبا باشید، تحریر در حال گرفتن ترجمه مد نظر شماست\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, error ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\\u062A\\u0631\\u062C\\u0645\\u0647 \\u06A9\\u0644\\u0645\\u0647 \\u0648\\u0627\\u0631\\u062F \\u0634\\u062F\\u0647 \\u0645\\u0648\\u062C\\u0648\\u062F \\u0646\\u06CC\\u0633\\u062A\\u060C \\u0627\\u0632 \\u0634\\u0645\\u0627 \\u062A\\u0642\\u0627\\u0636\\u0627 \\u062F\\u0627\\u0631\\u06CC\\u0645\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"\\u06A9\\u0644\\u0645\\u0647 \\u067E\\u06CC\\u0634\\u0646\\u0647\\u0627\\u062F \\u062F\\u0647\\u06CC\\u062F \")) : null, data ? React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, data.translations.map(function (item) {\n    return React.createElement(Col, {\n      key: item.translation,\n      onClick: function onClick() {\n        return setSelectedResult(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, item.translation);\n  })) : null, selectedResult.translation !== undefined ? React.createElement(SelectedResult, {\n    selected: selectedResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : null);\n});","map":{"version":3,"sources":["/home/smp/workspace/projects/TahrirProject/Tahrir-Frontend/src/components/Result/index.js"],"names":["React","useState","useAxios","SelectedResult","Loading","Row","Col","props","selectedResult","setSelectedResult","url","word","lang","method","data","loading","error","refetchFromPersian","translations","map","item","translation","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,UAAxC;AAEA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AAEA,gBAAe,UAAAC,KAAK,EAAI;AAAA,kBACsBN,QAAQ,CAAC,EAAD,CAD9B;AAAA;AAAA,MACfO,cADe;AAAA,MACCC,iBADD;;AAAA,kBAEiCP,QAAQ,CAAC;AAC9DQ,IAAAA,GAAG,kCAA2BH,KAAK,CAACI,IAAjC,mBAA8CJ,KAAK,CAACK,IAApD,CAD2D;AAE9DC,IAAAA,MAAM,EAAE;AAFsD,GAAD,CAFzC;AAAA;AAAA;AAAA,MAEbC,IAFa,eAEbA,IAFa;AAAA,MAEPC,OAFO,eAEPA,OAFO;AAAA,MAEEC,KAFF,eAEEA,KAFF;AAAA,MAEWC,kBAFX;;AAOtB,MAAI,IAAJ,EAAU,OAAO,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEV,SACE,0CACGD,KAAK,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uQADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAFF,CADI,GAKF,IANN,EAOGF,IAAI,GACH,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACI,YAAL,CAAkBC,GAAlB,CAAsB,UAAAC,IAAI,EAAI;AAC7B,WACE,oBAAC,GAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,WADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMZ,iBAAiB,CAACW,IAAD,CAAvB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,IAAI,CAACC,WAJR,CADF;AAQD,GATA,CADH,CADG,GAaD,IApBN,EAqBGb,cAAc,CAACa,WAAf,KAA+BC,SAA/B,GACC,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEd,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEG,IAvBN,CADF;AA2BD,CApCD","sourcesContent":["import React, { useState } from \"react\";\nimport useAxios from \"axios-hooks\";\n\nimport { SelectedResult, Loading } from \"../index\";\n\nimport { Row, Col } from \"react-bootstrap\";\n\nexport default props => {\n  const [selectedResult, setSelectedResult] = useState({});\n  const [{ data, loading, error }, refetchFromPersian] = useAxios({\n    url: `/translation/get?word=${props.word}&lang=${props.lang}`,\n    method: \"get\"\n  });\n\n  if (true) return <Loading desc={\"شکیبا باشید، تحریر در حال گرفتن ترجمه مد نظر شماست\"}/>;\n\n  return (\n    <>\n      {error ? (\n        <div>\n          <span>ترجمه کلمه وارد شده موجود نیست، از شما تقاضا داریم</span>\n          <span>کلمه پیشنهاد دهید </span>\n        </div>\n      ) : null}\n      {data ? (\n        <Row>\n          {data.translations.map(item => {\n            return (\n              <Col\n                key={item.translation}\n                onClick={() => setSelectedResult(item)}\n              >\n                {item.translation}\n              </Col>\n            );\n          })}\n        </Row>\n      ) : null}\n      {selectedResult.translation !== undefined ? (\n        <SelectedResult selected={selectedResult} />\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}