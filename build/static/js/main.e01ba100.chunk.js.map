{"version":3,"sources":["components/Search/index.js","components/Result/index.js","components/Loading/index.js","components/SelectedResult/index.js","App.js","serviceWorker.js","index.js","assets/img/logo.png","assets/img/user-logo.png"],"names":["Search","_ref","location","_React$createElement","_useState","useState","_useState2","Object","slicedToArray","word","setWord","_useState3","_useState4","suggestion","setSuggestion","_useState5","_useState6","lang","setLang","_useState7","_useState8","isSubmit","setIsSubmit","_useState9","_useState10","setIsSuggesting","_useState11","_useState12","isSuggestionMode","setSuggestionMode","_useState13","_useState14","name","setName","_useAxios","useAxios","url","method","manual","_useAxios2","_useAxios2$","loading","data","callable","error","react_default","a","createElement","Container","fluid","Row","className","Col","xs","htmlFor","Form","Control","size","value","onChange","e","target","type","placeholder","id","defineProperty","height","Fragment","style","sm","md","lg","onClick","translation","concat","disabled","Result","background","borderRadius","Image","src","logoPNG","width","alt","maxWidth","fontWeight","margin","props","selectedResult","setSelectedResult","Loading","translations","slice","map","item","key","undefined","SelectedResult","assign","comments","desc","_ref$tiny","tiny","noMargin","rate","setRate","opinion","setOpinion","console","log","length","comment","as","Group","controlId","Label","rows","Button","variaty","rating","axios","Axios","create","baseURL","headers","Content-Type","cache","LRU","max","configure","App","react_router_dom","react_router","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e01ba100.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport useAxios from \"axios-hooks\";\nimport { Result, Loading } from \"../index\";\nimport { Container, Row, Col, Form, Image } from \"react-bootstrap\";\nimport logoPNG from \"assets/img/logo.png\";\n\nimport \"./style.scss\";\n\nexport default ({ location }) => {\n  const [word, setWord] = useState(\"\");\n  const [suggestion, setSuggestion] = useState(\"\");\n  const [lang, setLang] = useState(\"\");\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [isSuggesting, setIsSuggesting] = useState(false);\n  const [isSuggestionMode, setSuggestionMode] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const [{ data, loading, error }, callable] = useAxios(\n    {\n      url: \"/translation/create\",\n      method: \"post\",\n    },\n    { manual: true }\n  );\n\n  if (!lang)\n    return (\n      <Row className=\"pb-3\">\n        <div\n          className=\"mx-auto p-3\"\n          style={{ background: \"aliceblue\", borderRadius: \"5rem\" }}\n        >\n          <Image\n            src={logoPNG}\n            height={100}\n            width={100}\n            className=\"header-logo\"\n            alt=\"linkerpad\"\n          />\n        </div>\n        <h2 className=\"text-center w-100 mt-5\">سلام</h2>\n        <h2 className=\"text-center w-100 mb-5\">به تحریر خوش اومدی!</h2>\n        <div className=\"w-100 mb-5\">\n          <h4\n            className=\"mx-auto text-center\"\n            style={{ maxWidth: \"800px\", fontWeight: \"300\", margin: \"2rem\" }}\n          >\n            ما یه سامانه آنلاینیم که توی اون میتونی ترجمه های مختلف کلمه مد نظرت\n            رو سرچ کنی، به ترجمه های جالب بقیه نمره بدی و نظر خودت رو با\n            تحریریون به اشتراک بزاری، قراره کلی رشد کنیم، جزو اولین نفر ها\n            باش...\n          </h4>\n        </div>\n        <Col>\n          <div className=\"lang-btn\" onClick={() => setLang(\"fa\")}>\n            <h3 style={{ fontWeight: \"400\" }}>پارسی</h3>\n          </div>\n        </Col>\n\n        <Col>\n          <div className=\"lang-btn\" onClick={() => setLang(\"en\")}>\n            <h3 style={{ fontWeight: \"400\" }}>English</h3>\n          </div>\n        </Col>\n      </Row>\n    );\n\n  return (\n    <Container fluid>\n      {/* <span className=\"mx-auto\"></span> */}\n      <Row className=\"row my-4\">\n        <Col xs={12} className=\"p-3 mr-auto\">\n          <label htmlFor=\"translate-from-input\" className=\"float-right\">\n            {lang === \"fa\" ? \"فارسی\" : \"انگلیسی\"}\n          </label>\n          <Form.Control\n            size=\"lg\"\n            value={word}\n            onChange={e => {\n              setWord(e.target.value);\n              setIsSubmit(false);\n            }}\n            type=\"text\"\n            placeholder=\"Large text\"\n            id=\"translate-form-input\"\n            name=\"translate-form-input\"\n            placeholder=\"کلمه خود را جستجو کنید\"\n            className=\"w-100\"\n            style={{ height: \"40px\" }}\n            disabled={isSuggestionMode}\n          />\n        </Col>\n\n        {isSuggestionMode && (\n          <>\n            <Col xs={12} className=\"p-3 mr-auto\">\n              <label htmlFor=\"translate-to-input\" className=\"float-right\">\n                {lang === \"fa\" ? \"انگلیسی\" : \"فارسی\"}\n              </label>\n              <Form.Control\n                size=\"lg\"\n                value={suggestion}\n                onChange={e => {\n                  setSuggestion(e.target.value);\n                  setIsSuggesting(false);\n                }}\n                type=\"text\"\n                id=\"translate-to-input\"\n                name=\"translate-to-input\"\n                placeholder=\"ترجمه پیشنهادی خود را بنویسید\"\n                className=\"w-100\"\n                style={{ height: \"40px\" }}\n              />\n            </Col>\n            <Col xs={12} className=\"p-3 mr-auto\">\n              <label htmlFor=\"name-input\" className=\"float-right\">\n                نام مترجم\n              </label>\n              <Form.Control\n                size=\"lg\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n                type=\"text\"\n                id=\"name-input\"\n                name=\"name-input\"\n                placeholder=\"محمد هدشی\"\n                className=\"w-100\"\n                style={{ height: \"40px\" }}\n              />\n            </Col>\n          </>\n        )}\n\n        <Col xs={12} sm={12} md={6} lg={4} className=\"p-3 ml-auto\">\n          <button\n            onClick={() => {\n              if (isSuggestionMode)\n                callable({\n                  data: {\n                    word: word,\n                    translation: suggestion,\n                    lang: lang === \"fa\" ? \"en\" : \"fa\",\n                    name: name\n                  }\n                });\n              else setIsSubmit(true);\n            }}\n            className={`btn btn-primary mx-auto my-1 ${isSuggestionMode &&\n              \"btn-success\"}`}\n            disabled={\n              (!isSuggestionMode && (isSubmit || !word)) ||\n              (isSuggestionMode && (!suggestion || loading))\n            }\n          >\n            {isSuggestionMode\n              ? \"پیشنهاد بده\" || (loading && <Loading tiny noMargin />)\n              : \"ترجمه کن\"}\n          </button>\n        </Col>\n\n        {isSubmit && (\n          <Col xs={12} sm={12} md={6} lg={4} className=\"p-3\">\n            <button\n              onClick={() => {\n                // setLang(null);\n                // setIsSubmit(false);\n                // setWord(\"\");\n                setSuggestionMode(!isSuggestionMode);\n              }}\n              className={`btn btn-primary mx-auto my-1 float-left ${isSuggestionMode &&\n                \"btn-danger\"}`}\n            >\n              {isSuggestionMode ? \"لغو\" : \"ترجمه پیشنهاد بده!\"}\n            </button>\n          </Col>\n        )}\n      </Row>\n\n      {isSubmit && <Result word={word} lang={lang} />}\n    </Container>\n  );\n};\n","import React, { useState } from \"react\";\nimport useAxios from \"axios-hooks\";\n\nimport { SelectedResult, Loading } from \"../index\";\n\nimport { Row, Col } from \"react-bootstrap\";\nimport \"./style.scss\";\n\nexport default props => {\n  const [selectedResult, setSelectedResult] = useState({});\n  const [{ data, loading, error }] = useAxios({\n    url: `/translation/get?word=${props.word}&lang=${props.lang}`,\n    method: \"get\"\n  });\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : null}\n      {error ? (\n        <div className=\"w-100 text-center\">\n          <span>ترجمه کلمه وارد شده موجود نیست، از شما تقاضا داریم</span>\n          <span>کلمه پیشنهاد دهید </span>\n        </div>\n      ) : null}\n      {data ? (\n        <Row>\n          {data.translations.slice(0, 3).map(item => {\n            return (\n              <Col\n                key={item.translation}\n                onClick={() => setSelectedResult(item)}\n                className={`\n                  result-translation \n                  ${item.translation === selectedResult.translation && \"active\"}\n                `}\n              >\n                <h5 className=\"mb-0\">{item.translation}</h5>\n              </Col>\n            );\n          })}\n        </Row>\n      ) : null}\n      {selectedResult.translation !== undefined ? (\n        <SelectedResult comments={selectedResult.comments} translation={selectedResult.translation} {...props} />\n      ) : null}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"./style.scss\";\n\nexport default ({ desc, tiny=false, noMargin }) => {\n  return (\n    <div className=\"mx-auto\">\n      <div className={`loader ${tiny && \"tiny-loader\"} ${noMargin && \"m-1\"}`}>{desc}</div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport useAxios from \"axios-hooks\";\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport { Loading } from \"../index\"\n\nexport default ({ comments, word, lang, translation }) => {\n  const [name, setName] = useState(\"\");\n  const [rate, setRate] = useState(0);\n  const [opinion, setOpinion] = useState(\"\");\n\n  const [{ data, loading, error }, callable] = useAxios({\n    url: `/comment/create`,\n    method: \"post\"\n  }, {manual: true});\n\n  console.log(data, loading, error)\n\n  return (\n    <Row>\n      <h3 className=\"w-100 mt-5 mb-3\">نظرات کاربران</h3>\n      {comments.length === 0 ? (\n        <>\n          <h5 className=\"w-100\">\n            متاسفانه هیچ کاربری برای این ترجمه نظری ثبت نکرده است.\n          </h5>\n          <p className=\"w-100\">نظر شما درباره ی این ترجمه چیست؟</p>\n        </>\n      ) : (\n        <>\n          {comments.map(comment => {\n            return <Col>اطلاعات کامنت</Col>;\n          })}\n        </>\n      )}\n\n      <Form as={Col}>\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Label>نام</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={e => setName(e.target.value)}\n            type=\"text\"\n            placeholder=\"محمد هدشی\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>نمره</Form.Label>\n          <Form.Control\n            value={rate}\n            onChange={e => setRate(e.target.value)}\n            as=\"select\"\n          >\n            <option>بدون نمره</option>\n            <option value={1}>یک ستاره</option>\n            <option value={2}>دو ستاره</option>\n            <option value={3}>سه ستاره</option>\n            <option value={4}>چهار ستاره</option>\n            <option value={5}>پنج ستاره</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>توضیحات</Form.Label>\n          <Form.Control\n            value={opinion}\n            as=\"textarea\"\n            rows=\"5\"\n            onChange={e => setOpinion(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          variaty={\"primary\"}\n          type=\"submit\"\n          onClick={() =>\n            callable({\n              data: {\n                word,\n                lang,\n                translation,\n                rating: rate,\n                comment: opinion\n              }\n            })\n          }\n          disabled={!rate || !opinion || !name}\n        >\n          {loading && <Loading tiny noMargin />}ثبت\n        </Button>\n      </Form>\n    </Row>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport useAxios from \"axios-hooks\";\nimport Axios from \"axios\";\nimport LRU from \"lru-cache\";\nimport { configure } from \"axios-hooks\";\n\nimport { Header, Search } from \"components\";\n\nimport { Container } from \"react-bootstrap\";\nimport \"./app.scss\";\n\nconst axios = Axios.create({\n  baseURL: \"http://localhost:8000/\",\n  headers: {\n    // \"Authorization\": localStorage.getItem(\"token\"),\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nconst cache = new LRU({ max: 10 });\n\nconfigure({ axios, cache });\n\nconst App = () => {\n  // const [state, setState] = useState({});\n\n  // const [{ data, loading, error }, refetch] = useAxios({\n  //   url: \"echo?name=akvar\",\n  //   method: \"get\",\n  //   // data: {\n  //   //   name: \"asghar\"\n  //   // }\n  // });\n\n  // console.log(data)\n\n  return (\n    <BrowserRouter>\n      {/* <Header/> */}\n        <Container className=\"app\">\n          <div className=\"wrapper\">\n            <Switch>\n              <Route path=\"/\" name=\"جستجو\" component={Search} />\n              {/* <PrivateRoute exact path='/project/:id/edit' name=\"ویرایش پروژه\" component={ProjectEditView} /> */}\n            </Switch>\n          </div>\n        </Container>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// import { StateProvider } from 'modules/store'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './index.css'\n\n// const initialState = {\n//   users: []\n// }\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case 'changeUsers':\n//       return {\n//         ...state,\n//         users: action.users\n//       }\n      \n//     default:\n//       return state\n//   }\n// }\n\nReactDOM.render(\n  // <StateProvider initialState={initialState} reducer={reducer}>\n    <App />,\n  // </StateProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/logo.cc9cdbe1.png\";","module.exports = __webpack_public_path__ + \"static/media/user-logo.f9ccb60e.png\";"],"sourceRoot":""}